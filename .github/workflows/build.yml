name: Build
on: push

jobs:
  #  Build-Windows:
  #    runs-on: windows-latest
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #        with:
  #          submodules: recursive
  #
  #      - name: Install dependencies
  #        uses: johnwason/vcpkg-action@v6
  #        with:
  #          pkgs: opencv4 vulkan-sdk-components libdeflate
  #          triplet: x64-windows-static
  #          token: ${{ github.token }}
  #          github-binarycache: true
  #
  #      - name: Install onnxruntime
  #        uses: johnwason/vcpkg-action@v6
  #        with:
  #          pkgs: onnxruntime-gpu
  #          triplet: x64-windows
  #          token: ${{ github.token }}
  #          github-binarycache: true
  #
  #      - name: Setup Zig
  #        uses: mlugg/setup-zig@v2
  #
  #      - name: Build project
  #        run: zig build --search-prefix extern/onnxruntime
  #
  #      - name: Upload install artifact
  #        uses: actions/upload-artifact@v4
  #        with:
  #          path: install

  Build-Macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: tecolicom/actions-use-homebrew-tools@v1
        with:
          tools: opencv wasm-micro-runtime

      - name: Download ONNX Runtime
        run: |
          mkdir -p extern/onnxruntime
          curl -L https://github.com/microsoft/onnxruntime/releases/download/v1.22.0/onnxruntime-osx-arm64-1.22.0.tgz -o onnxruntime.tgz
          tar -xzf onnxruntime.tgz -C extern/onnxruntime --strip-components=1

      - name: Setup Zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.15.1

      - name: Run tests
        run: zig build test -Doptimize=ReleaseSafe --search-prefix extern/onnxruntime

      - name: Build local
        run: zig build install -Doptimize=ReleaseSafe --search-prefix extern/onnxruntime -p zig-out-local

      - name: Build cloud
        run: zig build install -Doptimize=ReleaseSafe -Dcloud=true --search-prefix extern/onnxruntime -p zig-out-cloud

      - name: Upload local artifact
        uses: actions/upload-artifact@v4
        with:
          name: simulo-runtime-local-macos-arm64
          path: zig-out-local

      - name: Upload cloud artifact
        uses: actions/upload-artifact@v4
        with:
          name: simulo-runtime-cloud-macos-arm64
          path: zig-out-cloud

  Build-Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Add LunarG Repository
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-noble.list http://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
          sudo apt update

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: curl libopencv-dev libx11-dev libxkbcommon-dev libxi-dev libwayland-dev wayland-protocols vulkan-sdk build-essential cmake g++-multilib libgcc-11-dev lib32gcc-11-dev liblapack-dev ccache xvfb x11-apps imagemagick
          version: "1.0"

      - name: Download ONNX Runtime
        run: |
          mkdir -p extern/onnxruntime
          curl -L https://github.com/microsoft/onnxruntime/releases/download/v1.22.0/onnxruntime-linux-x64-1.22.0.tgz -o onnxruntime-linux-x64-1.22.0.tgz
          tar -xzf onnxruntime-linux-x64-1.22.0.tgz -C extern/onnxruntime --strip-components=1

      - name: Build WAMR
        run: |
          cd ..
          git clone https://github.com/bytecodealliance/wasm-micro-runtime.git
          cd wasm-micro-runtime/product-mini/platforms/linux
          mkdir build
          cd build
          cmake ..
          make
          sudo make install
          cd $GITHUB_WORKSPACE

      - name: Setup Zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.15.1

      - name: Run tests
        run: zig build test -Doptimize=ReleaseSafe --search-prefix extern/onnxruntime

      - name: Build local
        run: zig build install -Doptimize=ReleaseSafe --search-prefix extern/onnxruntime -p zig-out-local

      - name: Build cloud
        run: zig build install -Doptimize=ReleaseSafe -Dcloud=true --search-prefix extern/onnxruntime -p zig-out-cloud

      - name: Run runtime headless and capture screenshot
        env:
          DISPLAY: :99
          SIMULO_MACHINE_ID: 0
        run: |
          Xvfb :99 -screen 0 1280x720x24 &
          export DISPLAY=:99
          sleep 2
          # Start the app in background to allow window to appear
          ./zig-out/bin/runtime &
          RUNTIME_PID=$!
          # Wait a bit for the window/rendering to initialize
          sleep 5
          # Try to capture a screenshot using xwd -> convert (ImageMagick)
          if command -v xwd >/dev/null 2>&1; then
            xwd -root -silent | convert xwd:- screenshot.png || true
          else
            # Fallback to import (ImageMagick) if available
            if command -v import >/dev/null 2>&1; then
              import -window root screenshot.png || true
            fi
          fi
          # Terminate the app
          kill $RUNTIME_PID || true
          wait $RUNTIME_PID || true

      - name: Upload screenshot artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: runtime-screenshot-linux
          path: screenshot.png

      - name: Upload local artifact
        uses: actions/upload-artifact@v4
        with:
          name: simulo-runtime-local-linux-x64
          path: zig-out-local/bin

      - name: Upload cloud artifact
        uses: actions/upload-artifact@v4
        with:
          name: simulo-runtime-cloud-linux-x64
          path: zig-out-cloud/bin
